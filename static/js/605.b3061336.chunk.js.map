{"version":3,"file":"static/js/605.b3061336.chunk.js","mappings":"wMAAMA,EAAM,+BACNC,EAAM,mCACCC,EAAY,kCAAlB,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAqCA,IAAMC,EAAM,CACVC,kBA/BF,SAA2BC,GACzB,OAAOZ,EAAuB,GAAD,OACxBH,EADwB,iCACIC,EADJ,kBACiBc,EADjB,gDA+B7BC,oBA1BF,SAA6BC,GAC3B,OAAOd,EAAuB,GAAD,OACxBH,EADwB,uCACUC,EADV,iBACsBgB,KAyBnDC,kBArBF,SAA2BC,GACzB,OAAOhB,EAAuB,GAAD,OACxBH,EADwB,kBACXmB,EADW,oBACGlB,EADH,qBAqB7BmB,kBAhBF,SAA2BD,GACzB,OAAOhB,EAAuB,GAAD,OACxBH,EADwB,kBACXmB,EADW,4BACWlB,EADX,qBAgB7BoB,kBAXF,SAA2BF,GACzB,OAAOhB,EAAuB,GAAD,OACxBH,EADwB,kBACXmB,EADW,4BACWlB,EADX,6BAa/B,O,sOC/CaqB,EAASC,EAAAA,EAAAA,IAAH,mIAONC,EAAYD,EAAAA,EAAAA,IAAH,iJAOTE,EAAsBF,EAAAA,EAAAA,IAAH,oJAQnBG,EAAMH,EAAAA,EAAAA,IAAH,iFAKHI,EAAOJ,EAAAA,EAAAA,IAAH,0FAKJK,EAAOL,EAAAA,EAAAA,GAAH,iEAIJM,EAAQN,EAAAA,EAAAA,GAAH,iEAILO,EAAOP,EAAAA,EAAAA,EAAH,yFAKJQ,EAAMR,EAAAA,EAAAA,IAAH,2GAMHS,EAAUT,EAAAA,EAAAA,OAAH,mEAIPU,EAAcV,EAAAA,EAAAA,IAAH,uKCxDxB,EAAuB,+B,6BCoFvB,EAhEyB,WACvB,IAAIW,GAAWC,EAAAA,EAAAA,MACPC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR5B,EAAAA,EAAAA,kBAAsBuB,GAASM,MAAK,SAACH,GACnCC,EAASD,QAEV,CAACH,IAMJ,OACE,8BACGG,IACC,iCACE,SAACN,EAAD,WACE,SAACD,EAAD,CAASW,KAAK,SAASC,QATd,WACjBV,EAAS,MAQD,UACE,UAACZ,EAAD,YACE,SAAC,MAAD,IADF,kBAMJ,UAACE,EAAD,YACE,SAACE,EAAD,CACEmB,IAAK3C,EAAAA,EAAYqC,EAAMO,YACvBC,IAAKR,EAAMS,OAAST,EAAMxB,KAC1BkC,MAAM,MACNC,OAAO,SAET,UAACvB,EAAD,YACE,UAACC,EAAD,WACGW,EAAMS,OAAST,EAAMxB,KADxB,KACgCwB,EAAMY,aADtC,QAGA,UAACrB,EAAD,yBAAkBS,EAAMa,aAAxB,YACA,SAACvB,EAAD,wBACA,SAACC,EAAD,UAAOS,EAAMc,YACb,SAACxB,EAAD,sBACA,SAACC,EAAD,UAAOS,EAAMe,OAAOC,KAAI,SAACC,GAAD,OAAWA,EAAMzC,QAAM0C,KAAK,gBAIxD,UAAChC,EAAD,YACE,SAACK,EAAD,sCACA,UAACC,EAAD,YACE,SAAC,KAAD,CAAM2B,GAAG,OAAOC,UAAWC,EAA3B,mBAGA,SAAC,KAAD,CAAMF,GAAG,UAAUC,UAAWC,EAA9B,4BAKJ,SAAC,KAAD","sources":["services/Api.js","views/MovieDetailsPage/MovieDetailsPage.styled.js","webpack://goit-react-hw-05-movies/./src/views/MovieDetailsPage/MovieDetailsPage.module.css?8c08","views/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["const URL = \"https://api.themoviedb.org/3\";\r\nconst KEY = \"4f78e0fa15d03d6a74908fc8e459b884\";\r\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nfunction fetchSearchMovies(name) {\r\n  return fetchWithErrorHandling(\r\n    `${URL}/search/movie?api_key=${KEY}&query=${name}&language=en-US&page=1&include_adult=false`\r\n  );\r\n}\r\n\r\nfunction fetchTrendingMovies(currentPage) {\r\n  return fetchWithErrorHandling(\r\n    `${URL}/trending/movie/day?api_key=${KEY}&page=${currentPage}`\r\n  );\r\n}\r\n\r\nfunction fetchMovieDetails(id) {\r\n  return fetchWithErrorHandling(\r\n    `${URL}/movie/${id}?api_key=${KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nfunction fetchMovieCredits(id) {\r\n  return fetchWithErrorHandling(\r\n    `${URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nfunction fetchMovieReviews(id) {\r\n  return fetchWithErrorHandling(\r\n    `${URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\r\n  );\r\n}\r\n\r\nconst Api = {\r\n  fetchSearchMovies,\r\n  fetchTrendingMovies,\r\n  fetchMovieDetails,\r\n  fetchMovieCredits,\r\n  fetchMovieReviews,\r\n};\r\n\r\nexport default Api;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100px;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n`;\r\nexport const Container = styled.div`\r\n  margin: 0 27px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid black;\r\n`;\r\nexport const ContainerAdditional = styled.div`\r\n  margin: 0 27px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid black;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 300px;\r\n  height: auto;\r\n  margin-right: 30px;\r\n`;\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n`;\r\nexport const Name = styled.h1`\r\n  font-size: 32px;\r\n  margin-top: 20px;\r\n`;\r\nexport const Title = styled.h2`\r\n  font-size: 24px;\r\n  margin-top: 20px;\r\n`;\r\nexport const Text = styled.p`\r\n  font-size: 18px;\r\n  margin-top: 20px;\r\n  text-align: justify;\r\n`;\r\nexport const Nav = styled.nav`\r\n  font-size: 18px;\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nexport const BtnHome = styled.button`\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n`;\r\nexport const PageHeading = styled.div`\r\n  padding: 30px 0;\r\n  margin-left: 27px;\r\n  margin-top: 0;\r\n  border-radius: 8px;\r\n  color: #424242;\r\n  font-size: 32px;\r\n  font-weight: 500;\r\n`;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetailsPage_link__BTMOq\"};","// страница с детальной информацией о кинофильме\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate, Outlet } from \"react-router-dom\";\r\nimport { VscArrowLeft } from \"react-icons/vsc\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Img,\r\n  Info,\r\n  Name,\r\n  Title,\r\n  Text,\r\n  ContainerAdditional,\r\n  Nav,\r\n  BtnHome,\r\n  PageHeading,\r\n} from \"./MovieDetailsPage.styled\";\r\nimport s from \"./MovieDetailsPage.module.css\";\r\nimport { IMAGE_URL } from \"../../services/Api\";\r\nimport Api from \"../../services\";\r\n\r\nconst MovieDetailsPage = () => {\r\n  let navigate = useNavigate();\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    Api.fetchMovieDetails(movieId).then((movie) => {\r\n      setMovie(movie);\r\n    });\r\n  }, [movieId]);\r\n\r\n  const onHomePage = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movie && (\r\n        <>\r\n          <PageHeading>\r\n            <BtnHome type=\"button\" onClick={onHomePage}>\r\n              <Button>\r\n                <VscArrowLeft />\r\n                Go back\r\n              </Button>\r\n            </BtnHome>\r\n          </PageHeading>\r\n          <Container>\r\n            <Img\r\n              src={IMAGE_URL + movie.poster_path}\r\n              alt={movie.title || movie.name}\r\n              width=\"300\"\r\n              height=\"450\"\r\n            />\r\n            <Info>\r\n              <Name>\r\n                {movie.title || movie.name} ({movie.release_date})\r\n              </Name>\r\n              <Text>User score {movie.vote_average} / 10</Text>\r\n              <Title>Overview</Title>\r\n              <Text>{movie.overview}</Text>\r\n              <Title>Genges</Title>\r\n              <Text>{movie.genres.map((genre) => genre.name).join(\" | \")}</Text>\r\n            </Info>\r\n          </Container>\r\n\r\n          <ContainerAdditional>\r\n            <Text>Additional information</Text>\r\n            <Nav>\r\n              <Link to=\"cast\" className={s.link}>\r\n                Cast\r\n              </Link>\r\n              <Link to=\"reviews\" className={s.link}>\r\n                Reviews\r\n              </Link>\r\n            </Nav>\r\n          </ContainerAdditional>\r\n          <Outlet />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n"],"names":["URL","KEY","IMAGE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","Api","fetchSearchMovies","name","fetchTrendingMovies","currentPage","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","Button","styled","Container","ContainerAdditional","Img","Info","Name","Title","Text","Nav","BtnHome","PageHeading","navigate","useNavigate","movieId","useParams","useState","movie","setMovie","useEffect","then","type","onClick","src","poster_path","alt","title","width","height","release_date","vote_average","overview","genres","map","genre","join","to","className","s"],"sourceRoot":""}